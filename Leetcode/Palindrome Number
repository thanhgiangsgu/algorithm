//Palindrome Number
Problem https://leetcode.com/problems/palindrome-number/description/
Tham kháº£o : https://yarndev.wordpress.com/2024/01/17/palindrome-number/

Given an integer x, return true if x is a 
palindrome
, and false otherwise.

 

Example 1:

Input: x = 121
Output: true
Explanation: 121 reads as 121 from left to right and from right to left.
Example 2:

Input: x = -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: x = 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
 

Constraints:

-231 <= x <= 231 - 1

////method 1

class Solution {
 
public:
    bool isPalindrome(int x) {
        if (x < 0) {
            return false;
        }
        int original = x;
        int reversed = 0;
        while (x > 0)
            reversed = reversed * 10 + x % 10;
            x /= 10;
        }
        return original == reversed;
    }
};


//method 2
#include <string>
 
class Solution {
public:
    bool isPalindrome(int x) {
        // Check for negative numbers or numbers ending with 0
        if (x < 0 || (x % 10 == 0 && x != 0)) {
            return false;
        }
 
        // Convert the number to a string
        std::string strX = std::to_string(x);
 
        // Use two pointers to check for symmetry
        int left = 0, right = strX.length() - 1;
 
        while (left < right) {
            if (strX[left] != strX[right]) {
                return false;  // Not a palindrome
            }
            left++;
            right--;
        }
 
        return true;  // Palindrome
    }
};
