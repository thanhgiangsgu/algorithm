Given an integer numRows, return the first numRows of Pascal's triangle.

Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
Example 2:

Input: numRows = 1
Output: [[1]]

Constraints:

1 <= numRows <= 30

Code

#include <vector>

class Solution {
public:
    std::vector<std::vector<int>> generate(int numRows) {
        std::vector<std::vector<int>> result;

        for (int i = 0; i < numRows; ++i) {
            std::vector<int> row(i + 1, 1);

            for (int j = 1; j < i; ++j) {
                row[j] = result[i - 1][j - 1] + result[i - 1][j];
            }

            result.push_back(row);
        }

        return result;
    }
};


Code 

class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> ans;
        ans.push_back({1});

        for (int i = 1; i < numRows; i++) {
            vector<int> tmp(i + 1, 1);
            for (int j = 1; j < i; j++) tmp[j] = ans[i - 1][j - 1] + ans[i - 1][j];

            ans.push_back(tmp);
        }

        return ans;
    }
};
